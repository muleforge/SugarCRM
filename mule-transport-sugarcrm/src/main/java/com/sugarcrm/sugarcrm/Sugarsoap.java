
/*
 * 
 */

package com.sugarcrm.sugarcrm;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.1.2
 * Tue May 11 13:08:09 CEST 2010
 * Generated source version: 2.1.2
 * 
 */


@WebServiceClient(name = "sugarsoap", 
                  wsdlLocation = "classpath:sugar.wsdl",
                  targetNamespace = "http://www.sugarcrm.com/sugarcrm") 
public class Sugarsoap extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.sugarcrm.com/sugarcrm", "sugarsoap");
    public final static QName SugarsoapPort = new QName("http://www.sugarcrm.com/sugarcrm", "sugarsoapPort");
    static {
        URL url = null;
        try {
            url = ClassLoader.getSystemResource("sugar.wsdl"); 
            if (url == null)
            {
                throw new MalformedURLException("could not load sugar.wsdl");
            }
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:src/main/resources/sugar.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public Sugarsoap(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Sugarsoap(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Sugarsoap() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns SugarsoapPortType
     */
    @WebEndpoint(name = "sugarsoapPort")
    public SugarsoapPortType getSugarsoapPort() {
        return super.getPort(SugarsoapPort, SugarsoapPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SugarsoapPortType
     */
    @WebEndpoint(name = "sugarsoapPort")
    public SugarsoapPortType getSugarsoapPort(WebServiceFeature... features) {
        return super.getPort(SugarsoapPort, SugarsoapPortType.class, features);
    }
    
    @WebEndpoint(name = "sugarsoapPort")
    public SugarsoapPortType getSugarsoapPort(String url) {
        SugarsoapPortType port = super.getPort(SugarsoapPort, SugarsoapPortType.class);
        ((BindingProvider) port).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, url);
        
        return port;
    }

}
